package com.OHRM_AddEmployee;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.testng.annotations.Test;

import com.BaseTest.BaseTest;
import com.Utility.Log;
public class OrangeHRMApplication_AddEmployeeTest extends BaseTest
{

	FileInputStream orangeHRMApplicationTestDataFile;
	XSSFWorkbook orangeHRMApplicationWorkBook;
	XSSFSheet orangeHRMApplicationTestDataSheet;
	Row orangeHRMRow;
	Cell orangeHRMRowOfCell;
	FileOutputStream orangeHRMApplicationLogInTestResultFile;
    


	@Test(priority=1,description="OrangeHRM Application Add Employee Test")
	public void orangeHRMApplication_AddEmployee() throws IOException  
	{
orangeHRMApplicationTestDataFile=new FileInputStream("C:\\OrangeHRMApplication\\OrangeHRMApplicationTesting\\src\\main\\java\\com\\OrangeHRMApplicationTestDataFIles\\AddEmployee.xlsx");
		
		orangeHRMApplicationWorkBook=new XSSFWorkbook(orangeHRMApplicationTestDataFile);
		
		orangeHRMApplicationTestDataSheet=orangeHRMApplicationWorkBook.getSheet("Sheet1");
		
		orangeHRMRow=orangeHRMApplicationTestDataSheet.getRow(1);
		
		orangeHRMRowOfCell=orangeHRMRow.getCell(0);
		
		String expected_OrangeHRMLogInPageText=orangeHRMRowOfCell.getStringCellValue();
		System.out.println("The Expected OrangeHRM Application LogIn Page LogIn Panel Text is:"+expected_OrangeHRMLogInPageText);
	
		 FileInputStream OHRMApplication=new FileInputStream("C:\\OrangeHRMApplication\\OrangeHRMApplicationTesting\\src\\main\\java\\com\\Config\\OHRMApplication.properties");
		 Properties properties=new Properties();
		 properties.load(OHRMApplication);
		 
		By orangeHRMApplicationLogInPageLogInPanelProperty=By.id(properties.getProperty("logInPageLogInPanelProperty"));
		WebElement orangeHRMApplicationLogInPageLogInPanel=driver.findElement(orangeHRMApplicationLogInPageLogInPanelProperty);
		
		String actual_OrangeHRMLogInPageText=orangeHRMApplicationLogInPageLogInPanel.getText();
		System.out.println("The  Actual OrangeHRM Application LogIn Page LogIn Panel Text is:"+actual_OrangeHRMLogInPageText);
		
		 orangeHRMRowOfCell=orangeHRMRow.createCell(2);
		 orangeHRMRowOfCell.setCellValue(actual_OrangeHRMLogInPageText);
		 
		 if(actual_OrangeHRMLogInPageText.equals(expected_OrangeHRMLogInPageText))
		 {
			 System.out.println("Successfully Navigated to the OrangeHRM Application LogIn Page-TEXT FOUND--PASS");
			 orangeHRMRowOfCell=orangeHRMRow.createCell(3);
			 orangeHRMRowOfCell.setCellValue("PASS");
			 
		 }
		 else
		 {
			 System.out.println("Failed to Navigate to the OrangeHRM Application LogIn Page-FAIL");
			 orangeHRMRowOfCell=orangeHRMRow.createCell(3);
			 orangeHRMRowOfCell.setCellValue("FAIL");
		 }
		 
		 Cell expected_Title=orangeHRMRow.getCell(4);
		 String expected_OrangeHRMLogInPageTitle=expected_Title.getStringCellValue();
		 
		 System.out.println("The Expected OrangeHRM Application LogIn Page Title is:"+expected_OrangeHRMLogInPageTitle);
		 
		 String actual_OrangeHRMLogInPageTitle=driver.getTitle();
		 System.out.println("The Actual OrangeHRM Application Title is:"+actual_OrangeHRMLogInPageTitle);
		 
		 orangeHRMRowOfCell=orangeHRMRow.createCell(5);
		 orangeHRMRowOfCell.setCellValue(actual_OrangeHRMLogInPageTitle);
		 
		 if(actual_OrangeHRMLogInPageTitle.equalsIgnoreCase(expected_OrangeHRMLogInPageTitle))
		 {
			 System.out.println("Successfully Navigated to the OrangeHRM Application LogIn Page-PASS");
			 orangeHRMRowOfCell=orangeHRMRow.createCell(6);
			 orangeHRMRowOfCell.setCellValue("PASS");
			 
		 }
		 else
		 {
			 System.out.println("Failed to Navigate to the OrangeHRM Application LogIn Page-FAIL");
			 orangeHRMRowOfCell=orangeHRMRow.createCell(6);
			 orangeHRMRowOfCell.setCellValue("FAIL");
		 }	
		 		
		 Cell userNameTestDataCell=orangeHRMRow.getCell(7);
		 String userNameTestData=userNameTestDataCell.getStringCellValue();
		  	  
		  By userNameProperty=By.id(properties.getProperty("logInPageUserNameProperty"));
		  WebElement userName=driver.findElement(userNameProperty); 
		  userName.sendKeys(userNameTestData);
		 
		 Cell passwordTestDataCell=orangeHRMRow.getCell(8);
   	     String passwordTestData=passwordTestDataCell.getStringCellValue();
   		 
   	      By passwordProperty=By.name(properties.getProperty("logInPagepasswordProperty"));
   	      WebElement password=driver.findElement(passwordProperty);
   	      password.sendKeys(passwordTestData);
		 
		   By logInButtonProperty=By.className(properties.getProperty("logInPageLogInButtonProperty"));
		   WebElement logInButton=driver.findElement(logInButtonProperty);
		   logInButton.click();
	  
			
		   try
  		 {
  			By welcomeAdminProperty= By.partialLinkText(properties.getProperty("orangeHRMApplicationHomePageWelComeAdminProperty"));
  			WebElement welComeAdmin=driver.findElement(welcomeAdminProperty);
  			
  			String actual_OrangeHRMWelcomeAdminText=welComeAdmin.getText();
  			Log.info("The Actual OrangeHRM Application Home Page Text is:"+actual_OrangeHRMWelcomeAdminText);
  			
  			Cell actual_AdminText=orangeHRMRow.createCell(10);
  			actual_AdminText.setCellValue(actual_OrangeHRMWelcomeAdminText);
  			
  			
  			Cell homePageText=orangeHRMRow.getCell(9);
  			String expected_OrangeHRMWelcomeAdminText=homePageText.getStringCellValue();
  			
  			Log.info("The Expected OrangeHRM Application Home Page Text is:"+expected_OrangeHRMWelcomeAdminText);
  			
  			if(actual_OrangeHRMWelcomeAdminText.contains(actual_OrangeHRMWelcomeAdminText))
  			{
  				Log.info("Successfully Navigated to OrangeHRM Application Home Page-TEXT Found-PASS");
  				
  				Cell homePageTextResult=orangeHRMRow.createCell(11);
  				homePageTextResult.setCellValue("PASS");
  				
  			}
  			
  			if(welComeAdmin.isDisplayed())
  			{
  				welComeAdmin.click();
  				By logOutProperty=By.partialLinkText(properties.getProperty("homePagelogOutProperty"));
  				WebElement logOut=driver.findElement(logOutProperty);
  				logOut.click();
  			}
  			
  			 
  		 }
  		 catch(Exception e)
  		 {
  			 By invalidCredentialsProperty = By.id(properties.getProperty("invalidCredentialsProperty"));

  			 WebElement invalidCredentials = driver.findElement(invalidCredentialsProperty);

  			 String actualinvalidCredentials = invalidCredentials.getText();

  			 Cell homePageTestResult = orangeHRMRow.createCell(11);

  			 String expecteddataOfLoginInvalid = orangeHRMRow.getCell(1).getStringCellValue();

  			 if (actualinvalidCredentials.equalsIgnoreCase(expecteddataOfLoginInvalid))
  			 {

  			 System.out.println("Failed To login Due to invalid Credentials:-Fail");

  			 homePageTestResult.setCellValue("Fail");
  	     
  		 }
  	  
			 
			}	
		 
		 FileOutputStream orangeHRMApplicationTestResultFile=new FileOutputStream("C:\\OrangeHRMApplication\\OrangeHRMApplicationTesting\\src\\main\\java\\com\\OrangeHRMApplicationTestResultFIles\\AddEmployeeResult.xlsx");
         orangeHRMApplicationWorkBook.write(orangeHRMApplicationTestResultFile);
		 
       
	
	

	
	}
	
}
